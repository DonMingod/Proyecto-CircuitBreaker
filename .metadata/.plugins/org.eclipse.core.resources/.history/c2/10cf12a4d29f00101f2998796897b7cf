package com.huisa.service;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.client.HttpClientErrorException;
import org.springframework.web.client.RestTemplate;

import io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker;

@Service
public class ExternalService {
	
	private final RestTemplate restTemplate = new RestTemplate();
	
	
	@CircuitBreaker (name= "miCircuitBreaker" , fallbackMethod = "fallbackMethod")
	public String callExternalService() {
		
		try {
			String url = "http://localhost:8081";
			
			ResponseEntity<String> response = restTemplate.getForEntity(url, String.class);
		  
			if(response.getStatusCode() == HttpStatus.NOT_FOUND) {
				throw new RuntimeException("Recurso no encontrado : 404");
								
			}	
		      return response.getBody();
		      
		} catch (HttpClientErrorException e) {
			if(e.getStatusCode() == HttpStatus.NOT_FOUND) {
				
				throw new RuntimeException("Recurso no encontrado: 404");
			}
			throw e;
		}
	
	}
	
	
	public String fallbackMethod(Exception ex) {
		return "El servicio no esta disponible";
	}
	
	
	

}
