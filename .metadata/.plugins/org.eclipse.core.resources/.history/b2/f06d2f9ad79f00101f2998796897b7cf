package com.huisa.service;


import org.springframework.boot.web.client.RestTemplateBuilder;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker;
import io.github.resilience4j.ratelimiter.annotation.RateLimiter;
import io.github.resilience4j.retry.annotation.Retry;


@Service
public class ExternalService {
	
	private final RestTemplate restTemplate;
	

	public ExternalService(RestTemplateBuilder restTemplateBuilder) {
		this.restTemplate = restTemplateBuilder.build();
	}
	
	
	@CircuitBreaker (name= "miCircuitBreaker" , fallbackMethod = "fallbackMethod")
	@Retry(name= "externalService")
	@RateLimiter(name= "externalService")
	public String callExternalService() {
		
			String url = "http://localhost:8081";	
			ResponseEntity<String> response = restTemplate.getForEntity(url, String.class);
		  			
		     return response.getBody();    		
	}
	
	public String fallbackMethod(Throwable throwable) {
		System.out.println("ENTRO EL FALLBACKMETHOD");
		return "Fallback response to:" + throwable.getMessage();
	}
	
	
	

}
